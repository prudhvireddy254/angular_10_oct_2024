use strict
==========
-provides better coding standard and stronger error checking.
-'use strict' is only recognized at the beginning of a script or a function.
-JavaScript modules are automatically in strict mode, with no statement needed to initiate it.(import/export)
-The purpose of "use strict" is to execute the javascript in "strict mode".
-when 'use strict' is not written, browser runs the JS in normal mode.
-when 'use strict' is  written, browser runs the JS in strict mode.
-in Normal mode few mistakes are ignored, in strict mode mistakes are not ignored


1. variable declaration without var/let/const is not allowed.
   makes it impossible to accidentally create global variables.
2. function with duplicate arguements are not allowed.
3. NaN/undefined/Infinity cann't be used as a variable name.
4. Delete of an unqualified identifier in strict mode. 
    ex:delete Object.prototype; 
	var x = 5; delete x;
5. Multiple assignments not allowed.
   var a = b = c = 3;
6. 'this' is undefined, when a function is invoked from Global Context in strict mode.


Variable Scope
==============
1. Global : declared outside function, visible accross function
2. Function : declared inside a function, visible only inside that function
3. Block : declared inside a block(if,else,try,catch),visible only inside that block



Functions
=========
1. Pre-Defined (console.log() , Math.max())
2. User-Defined

a. function declaration
b. function expression
c. self invoked (IIFE-Immediately invoked function expression)
d. arrow function


Assignment:
===========
try to explore 'console' object methods : 
log()
warn()
error()
table()
time()
timeEnd()
dir()
trace()